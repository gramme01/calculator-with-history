{"version":3,"names":[],"mappings":"","sources":["script.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keyValueGetter = keyValueGetter;\nexports.addToExp = addToExp;\nexports.setDisplay = setDisplay;\nexports.getDisplay = getDisplay;\nexports.expCharLengthExceeded = expCharLengthExceeded;\nexports.clear = clear;\n\nfunction keyValueGetter(key) {\n  var keyValuelog = key.dataset.value;\n  return keyValuelog;\n}\n\nfunction addToExp(item, location) {\n  location.textContent += item;\n}\n\nfunction setDisplay(node, item) {\n  node.textContent = item;\n}\n\nfunction getDisplay(node) {\n  return node.textContent;\n}\n\nfunction expCharLengthExceeded(exp, limit) {\n  if (exp.length >= limit) {\n    return true;\n  }\n}\n\nfunction clear(display) {\n  setDisplay(display, \"\");\n}\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\nvar _calcModules = require(\"./calc-modules\");\n\nvar _theme = _interopRequireDefault(require(\"./theme\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/**\r\n|--------------------------------------------------\r\n| INITS\r\n|--------------------------------------------------\r\n*/\nvar solution = null;\nvar historyLog = [];\n(0, _theme.default)();\n/**\r\n|--------------------------------------------------\r\n| CACHE DOM\r\n|--------------------------------------------------\r\n*/\n\nvar keys = document.querySelectorAll(\"[data-value]\");\nvar clearBtn = document.querySelector(\"[data-value = 'clear']\");\nvar displayExp = document.querySelector(\".calc__expression\");\nvar historyLogDisplay = document.querySelector(\".history__content\");\nvar displayAns = document.querySelector(\".calc__answer\");\n/**\r\n|--------------------------------------------------\r\n|KEYPRESS FUNCTIONS\r\n|--------------------------------------------------\r\n*/\n\nvar evaluate = function evaluate() {\n  var _getExpArray = getExpArray(),\n      _getExpArray2 = _slicedToArray(_getExpArray, 3),\n      expArray = _getExpArray2[0],\n      currentNum = _getExpArray2[1],\n      exp = _getExpArray2[2]; // const fractionExp = fractionalize(expArray);\n\n\n  var mathExp = exp.replace(/x/g, \"*\").replace(/รท/g, \"/\");\n  var answer;\n\n  if (currentNum === \"\" || currentNum[currentNum.length - 1] === \".\") {\n    //stop useless equal to (after sign and decimal)\n    return;\n  }\n\n  createHistory(exp);\n  solution = eval(mathExp).toString();\n  console.log(_typeof(solution));\n\n  if ((0, _calcModules.expCharLengthExceeded)(solution, 8)) {\n    answer = Number(solution).toExponential(6);\n    console.log(\"object\");\n  } else {\n    answer = solution;\n  }\n\n  (0, _calcModules.setDisplay)(displayAns, answer);\n  (0, _calcModules.clear)(displayExp);\n};\n\nvar backspace = function backspace() {\n  var exp = (0, _calcModules.getDisplay)(displayExp);\n  var operators = [\"+\", \"-\", \"x\", \"รท\", \"%\", \" \"];\n\n  do {\n    exp = exp.substr(0, exp.length - 1);\n  } while (operators.includes(exp[exp.length - 1]));\n\n  (0, _calcModules.setDisplay)(displayExp, exp);\n};\n\nvar displayPressedKey = function displayPressedKey(key, check) {\n  var value = (0, _calcModules.keyValueGetter)(key);\n  var item = keyPositionCheck(value, check);\n  (0, _calcModules.addToExp)(item ? item : \"\", displayExp);\n};\n\nvar keyPositionCheck = function keyPositionCheck(value, type) {\n  var _getExpArray3 = getExpArray(),\n      _getExpArray4 = _slicedToArray(_getExpArray3, 3),\n      expArray = _getExpArray4[0],\n      currentNum = _getExpArray4[1],\n      exp = _getExpArray4[2];\n\n  var length = expArray.length;\n  var firstPressedKey = expArray[0] === \"\" && length === 1;\n  var firstChar = currentNum.length === 0; //first character of expression\n\n  var expNoSpace = exp.replace(/\\s+/g, \"\");\n  var item;\n\n  if ((0, _calcModules.expCharLengthExceeded)(expNoSpace, 16)) {\n    return;\n  }\n\n  switch (type) {\n    case \"operator\":\n      item = \" \" + value + \" \";\n\n      if (currentNum[currentNum.length - 1] === \".\") {\n        // no operator immediately after decimal\n        item = null;\n      }\n\n      if (value !== \"-\" && firstPressedKey) {\n        //operator button other than - cannot be pressed first without invoking ans\n        item = solution ? \"\".concat(solution, \" \").concat(value, \" \") : null;\n      } //handle operators pressed after another operator\n\n\n      if (currentNum === \"\" && length > 1) {\n        var prevSign = expArray[length - 2];\n\n        if (value === \"-\" && prevSign === \"-\") {\n          // cycle + and - when - is pressed consecutively\n          expArray.splice(length - 2, 2, \"+\");\n        } else if (value === \"-\" && prevSign !== \"+\") {\n          // handle negation of numbers\n          expArray.push(value);\n        } else {\n          //replace preceding operator\n          expArray.splice(length - 2, 2, value);\n        }\n\n        var updatedDisplay = expArray.join(\" \");\n        (0, _calcModules.setDisplay)(displayExp, updatedDisplay);\n        item = \" \";\n      }\n\n      break;\n\n    case \"decimal\":\n      if (firstChar) {\n        item = \"0.\";\n      } else if (currentNum.indexOf(\".\") === -1) {\n        item = \".\";\n      } else {\n        item = null;\n      }\n\n      break;\n\n    case \"ans\":\n      if (firstChar || expArray.length === 3 && expArray[1] === \"-\") {\n        //firstchar or as the second pressed after -\n        item = solution ? solution : null;\n      } else {\n        item = null;\n      }\n\n      break;\n\n    case \"zero\":\n      if (firstChar) {\n        item = null;\n      } else {\n        item = value;\n      }\n\n      break;\n\n    default:\n      item = value;\n      break;\n  }\n\n  if (firstPressedKey && item !== null) {\n    //clear prev answer after first succesful keypress\n    (0, _calcModules.clear)(displayAns);\n  }\n\n  return item;\n};\n/**\r\n|--------------------------------------------------\r\n| HISTORY FUNCTIONS\r\n|--------------------------------------------------\r\n*/\n\n\nvar createHistory = function createHistory(exp) {\n  historyLog.unshift(exp);\n  addHistoryEntry(historyLogDisplay);\n};\n\nvar addHistoryEntry = function addHistoryEntry() {\n  var first = historyLogDisplay.firstElementChild;\n  var last = historyLogDisplay.lastElementChild;\n  var p = document.createElement(\"p\");\n  p.innerHTML = historyLog[0];\n  p.classList.add(\"history__entry\");\n  p.addEventListener(\"click\", loadHistory);\n  historyLogDisplay.insertBefore(p, first);\n\n  if (historyLogDisplay.childElementCount > 10) {\n    historyLogDisplay.removeChild(last);\n  }\n};\n\nvar removeHistoryEntry = function removeHistoryEntry() {\n  var children = historyLogDisplay.children;\n  var num = historyLogDisplay.childElementCount;\n  console.log(historyLogDisplay);\n\n  for (var i = 0; i < num; i++) {\n    children[i].removeEventListener(\"click\", loadHistory);\n  }\n};\n\nvar loadHistory = function loadHistory(e) {\n  var exp = e.target.textContent;\n  (0, _calcModules.setDisplay)(displayExp, exp);\n  (0, _calcModules.clear)(displayAns);\n};\n\nvar clearHistory = function clearHistory() {\n  (0, _calcModules.clear)(displayExp);\n  (0, _calcModules.setDisplay)(displayAns, \"0\");\n\n  while (historyLog.length > 0) {\n    historyLog.pop();\n  }\n\n  removeHistoryEntry();\n  historyLogDisplay.innerHTML = null;\n  solution = null;\n};\n/**\r\n|--------------------------------------------------\r\n| OTHERS\r\n|--------------------------------------------------\r\n*/\n\n\nvar getExpArray = function getExpArray() {\n  var exp = (0, _calcModules.getDisplay)(displayExp);\n  var expArray = exp.split(\" \");\n  var currentNum = expArray[expArray.length - 1];\n  return [expArray, currentNum, exp];\n};\n/**\r\n|--------------------------------------------------\r\n| EVENT\r\n|--------------------------------------------------\r\n*/\n\n\nvar keyOperation = function keyOperation(key) {\n  switch (key.dataset.value) {\n    case \"=\":\n      evaluate();\n      break;\n\n    case \"clear\":\n      (0, _calcModules.clear)(displayExp);\n      break;\n\n    case \"bcksp\":\n      backspace();\n      break;\n\n    case \"+\":\n    case \"-\":\n    case \"x\":\n    case \"รท\":\n    case \"%\":\n      displayPressedKey(key, \"operator\");\n      break;\n\n    case \"ans\":\n      displayPressedKey(key, \"ans\");\n      break;\n\n    case \".\":\n      displayPressedKey(key, \"decimal\");\n      break;\n\n    case \"0\":\n      displayPressedKey(key, \"zero\");\n      break;\n\n    default:\n      displayPressedKey(key);\n      break;\n  }\n}; //key press\n\n\nkeys.forEach(function (key) {\n  key.addEventListener(\"click\", function () {\n    return keyOperation(key);\n  });\n}); //doubleclick trash\n\nclearBtn.addEventListener(\"dblclick\", clearHistory);\n\n},{\"./calc-modules\":1,\"./theme\":4}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.themeInitializer = exports.persistTheme = void 0;\n\nvar persistTheme = function persistTheme(theme) {\n  localStorage.setItem(\"theme\", theme);\n};\n\nexports.persistTheme = persistTheme;\n\nvar themeInitializer = function themeInitializer(element, control) {\n  var savedTheme = localStorage.getItem(\"theme\") ? localStorage.getItem(\"theme\") : null;\n\n  if (savedTheme) {\n    element.setAttribute(\"data-theme\", savedTheme);\n\n    if (savedTheme === \"light\") {\n      control.checked = true;\n    }\n  }\n};\n\nexports.themeInitializer = themeInitializer;\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = themeHandler;\n\nvar _themeModules = require(\"./theme-modules\");\n\nfunction themeHandler() {\n  var app = document.documentElement;\n  var themeSwitch = document.getElementsByClassName(\"theme-toggler__checkbox\")[0];\n  (0, _themeModules.themeInitializer)(app, themeSwitch);\n\n  var toggleTheme = function toggleTheme(e) {\n    if (e.target.checked) {\n      app.setAttribute(\"data-theme\", \"light\");\n      (0, _themeModules.persistTheme)(\"light\");\n    } else {\n      app.setAttribute(\"data-theme\", \"dark\");\n      (0, _themeModules.persistTheme)(\"dark\");\n    }\n  };\n\n  themeSwitch.addEventListener(\"change\", toggleTheme, false);\n}\n\n},{\"./theme-modules\":3}]},{},[2]);\n"],"file":"script.js"}